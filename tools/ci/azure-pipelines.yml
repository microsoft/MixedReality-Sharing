# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- feature/dev

variables:
  buildConfiguration: 'Release'
  solution: '*.sln'
  cleanBuild: false

jobs:

#
# VS2019
#
- job: VS2019

  pool:
    vmImage: 'windows-2019'

  steps:

  - task: DeleteFiles@1
    displayName: 'Cleaning artifacts folder'
    inputs:
      sourceFolder: '$(Build.ArtifactStagingDirectory)'
      contents: '**'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: '>=4.9.2' # need this for <license> tag in nuspec

  - task: NuGetCommand@2
    displayName: 'Restore NuGet Packages'
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    displayName: 'Build solution'
    inputs:
      configuration: 'Debug'
      solution: '$(solution)'
      msbuildArgs: '/p:PlatformToolset=v142' # Allows 2019 toolchain with 2017 projects
      platform: 'x64'

  - task: VSTest@2
    displayName: 'Running C# tests'
    enabled: false
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: '*Test.dll'
      searchFolder: 'build\bin\Debug'

  - task: VSTest@2
    enabled: false
    displayName: 'Running C++ tests'
    inputs:
      platform: 'x64'
      configuration: 'Debug'
      testSelector: 'testAssemblies'
      testAssemblyVer2: '*Test.exe'
      pathtoCustomTestAdapters: 'packages\GoogleTestAdapter.0.16.1\build\_common'
      searchFolder: 'build\bin\Debug'

  - task: DotNetCoreCLI@2 # netcore or netstandard project  use this instead of nuget task
    inputs:
      command: 'pack'
      nobuild: 'true'
      verbosityPack: 'normal'
      configuration: 'Debug'
      packagesToPack: 'libs/**/*.csproj'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '0'
      minorVersion: '0'
      patchVersion: '0'

  - task: NuGetCommand@2 # c++ needs an explicit nuspec
    inputs:
      command: 'pack'
      configuration: 'Debug'
      packagesToPack: 'libs/**/*.nuspec'
      buildProperties: OutputPath=..\..\..\build\bin\Debug # TODO not hardcoded
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '0'
      minorVersion: '0'
      patchVersion: '0'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'

  # publishing packages is done from 'release' in ADO


